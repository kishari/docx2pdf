
package hu.dbx.ecrion.xfws.client;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * Render XSL-FO documents using <b>XF Ultrascale</b>. For more information see the <b>Programmers Documentation</b> section in XF Ultrascale Help.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "xfws", targetNamespace = "http://www.ecrion.com/xfws/2.0", wsdlLocation = "http://192.168.1.118:8080/ecrion/services/xfws?wsdl")
public class Xfws
    extends Service
{

    private final static URL XFWS_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(hu.dbx.ecrion.xfws.client.Xfws.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = hu.dbx.ecrion.xfws.client.Xfws.class.getResource(".");
            url = new URL(baseUrl, "http://192.168.1.118:8080/ecrion/services/xfws?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://192.168.1.118:8080/ecrion/services/xfws?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        XFWS_WSDL_LOCATION = url;
    }

    public Xfws(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Xfws() {
        super(XFWS_WSDL_LOCATION, new QName("http://www.ecrion.com/xfws/2.0", "xfws"));
    }

    /**
     * 
     * @return
     *     returns XfwsSoap
     */
    @WebEndpoint(name = "xfwsSoap")
    public XfwsSoap getXfwsSoap() {
        return super.getPort(new QName("http://www.ecrion.com/xfws/2.0", "xfwsSoap"), XfwsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XfwsSoap
     */
    @WebEndpoint(name = "xfwsSoap")
    public XfwsSoap getXfwsSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.ecrion.com/xfws/2.0", "xfwsSoap"), XfwsSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns XfwsSoap
     */
    @WebEndpoint(name = "xfwsSoap12")
    public XfwsSoap getXfwsSoap12() {
        return super.getPort(new QName("http://www.ecrion.com/xfws/2.0", "xfwsSoap12"), XfwsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XfwsSoap
     */
    @WebEndpoint(name = "xfwsSoap12")
    public XfwsSoap getXfwsSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.ecrion.com/xfws/2.0", "xfwsSoap12"), XfwsSoap.class, features);
    }

}
